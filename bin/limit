#!/usr/bin/env python
# -*- coding: utf-8 -*-

""" Get boundaries of given catalogs """

# Standard Python modules
import argparse

# Python modules
import numpy
from astropy.table import Table

# User-defined modules
from lib.cosmology import Cosmology

RAD2DEG = 180./numpy.pi

def main():
    """ Finding the absolute limit of each catalog """
    def parse_command_line():
        parser = argparse.ArgumentParser(description='fast plot')
        parser.add_argument('input',
                            help    = 'input files',
                            nargs   ='+',
                            type    = str)
        parser.add_argument('--s_max', '-s',
                            help    = 'maximum distance',
                            default = 200,
                            type    = float)

        params = parser.parse_args()
        return params

    args = parse_command_line()

    fname_list = args.input
    s_max = args.s_max

    # Sentinel values
    ra_min = 100000
    ra_max = -100000
    dec_min = 100000
    dec_max = -100000
    z_min = 100000
    z_max = -100000

    # Loop over all catalog
    for i, fname in enumerate(fname_list):

       # open .fits file
        table = Table.read(fname)
        dec = table['dec'].data
        ra = table['ra'].data
        z = table['z'].data

        print('')
        print("Catalog {}".format(i))
        print("- RA:  [{}, {}]".format(ra.min(), ra.max()))
        print("- DEC: [{}, {}]".format(dec.min(), dec.max()))
        print("- Z:   [{}, {}]".format(z.min(), z.max()))

        ra_min = min(ra.min(), ra_min)
        ra_max = max(ra.max(), ra_max)
        dec_min = min(dec.min(), dec_min)
        dec_max = max(dec.max(), dec_max)
        z_min = min(z.min(), z_min)
        z_max = max(z.max(), z_max)

    print('')
    print("All:")
    print("- RA:  [{}, {}]".format(ra_min, ra_max))
    print("- DEC: [{}, {}]".format(dec_min, dec_max))
    print("- Z:   [{}, {}]".format(z_min, z_max))
    print('')

if __name__ == "__main__":
    main()
